name: mac-osx
description: template used to build for mac osx

inputs:
 xcode_arch:
    description: "x86_64 or arm64 or empty for both"
    required: false
    type: string

runs:
    using: "composite"
    steps:
    
    - name: Install Tools
      run: brew install nasm
      shell: bash
      
    - name: vcpkg Integration
      run: $VCPKG_INSTALLATION_ROOT/vcpkg integrate install
      shell: bash
      
    - name: Get vcpkg current hash
      run: echo "vcpkg_current_hash=$(git -C $VCPKG_INSTALLATION_ROOT rev-parse --short HEAD)" >> $GITHUB_ENV
      shell: bash
      
    - name: Restore vcpkg cache for x64
      if: inputs.xcode_arch == 'x86_64' || inputs.xcode_arch == ''
      uses: actions/cache@v4
      with:
        path: vcpkg/installed-x64-osx
        key: ${{runner.os}}-installed-x64-osx-${{env.vcpkg_current_hash}}-${{hashFiles('**/vcpkg.json')}}
        
    - name: Restore vcpkg cache for arm64
      if: inputs.xcode_arch == 'arm64' || inputs.xcode_arch == ''
      uses: actions/cache@v4
      with:
        path: vcpkg/installed-arm64-osx
        key: ${{runner.os}}-installed-arm64-osx-${{env.vcpkg_current_hash}}-${{hashFiles('**/vcpkg.json')}}
      
    - name: Switch to Xcode 14.3.1
      run: sudo xcode-select --switch /Applications/Xcode_14.3.1.app
      shell: bash
      
    - name: Install x64 Dependencies
      if: inputs.xcode_arch == 'x86_64' || inputs.xcode_arch == ''
      run: cd vcpkg && ./install-x64-osx.sh
      shell: bash
      
    - name: Install arm64 Dependencies
      if: inputs.xcode_arch == 'arm64' || inputs.xcode_arch == ''
      run: cd vcpkg && ./install-arm-osx.sh
      shell: bash
      
    - name: Build
      run: |
        if [ -n ${{inputs.xcode_arch}} ]; then arch_arg="-arch ${{inputs.xcode_arch}}" fi &&
        cd PBProjects && xcodebuild ${arch_arg} -target "Aleph One" DEVELOPMENT_TEAM='' CODE_SIGN_IDENTITY='-' CODE_SIGN_STYLE='Automatic' build
      shell: bash